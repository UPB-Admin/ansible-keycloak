<?xml version="1.0" encoding="UTF-8"?>
<!--
     This file is managed by ansible. Manual overrides may be overwritten
-->

<!-- The configuration is based on the default Keycloak cache-ispn.xml -->

<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:13.0 http://www.infinispan.org/schemas/infinispan-config-13.0.xsd"
        xmlns="urn:infinispan:config:13.0">

    <cache-container name="keycloak">
        <transport lock-timeout="60000"/>
        <local-cache name="realms">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
        </local-cache>
        <local-cache name="users">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
        </local-cache>
{% for cache_name, cache_type in infinispan_caches.items() %}
        <{{ cache_type }}-cache name="{{ cache_name }}" {{ '' if cache_type == "replicated" else 'owners="2"' }}>
            <remote-store xmlns="urn:infinispan:config:store:remote:13.0" cache="{{ cache_name }}"
                          fetch-state="false" purge="false" preload="false" shared="true" segmented="false" raw-values="true"
                          marshaller="org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory">

{% for server in keycloak_cluster_infinispan_servers %}
                <remote-server host="{{ server }}" port="{{ infinispan_hotrod_port }}"/>
{% endfor %}

                <security>
                    <authentication server-name="infinispan">
                        <digest username="{{ infinispan_keycloak_user }}" password="{{ vault.infinispan.user.keycloak.pass }}" realm="default"/>
                    </authentication>
                    <encryption>
                        <truststore filename="{{ keycloak_truststore_file }}" password="{{ vault.keycloak.truststore.pass }}" type="JKS"/>
                    </encryption>
                </security>
            </remote-store>

            <expiration {{ 'interval="300000" max-idle="-1"' if cache_name == 'actionTokens' else '' }} lifespan="-1"/>
{% if cache_name == 'actionTokens' %}
            <memory max-count="-1"/>
{% endif %}
        </{{ cache_type }}-cache>
{% endfor %}
        <local-cache name="authorization">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
        </local-cache>
        <local-cache name="keys">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <expiration max-idle="3600000"/>
            <memory max-count="1000"/>
        </local-cache>
    </cache-container>
</infinispan>

<!-- vi: ft=xml expandtab sw=4 sts=4 ts=4
-->
