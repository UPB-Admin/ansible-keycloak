- name: Install haproxy
  become: yes
  block:
    - name: Install haproxy and dependencies
      package:
        name:
          - haproxy
        state: latest


- name: HAProxy auxiliary files setup
  become: yes
  block:
    # HAProxy does not have an explicit parameter for key
    - name: Add symlinks for certificate keys as CERT.crt.key
      file:
        path: "{{ item }}.key"
        src: "{{ pki_configs.load_balancers.certificate_key_path }}"
        owner: "{{ pki_configs.load_balancers.file_owner }}"
        group: "{{ pki_configs.load_balancers.file_group }}"
        seuser: system_u
        setype: cert_t
        state: link
      with_items:
        - "{{ pki_configs.load_balancers.certificate_crt_path }}"
        - "{{ pki_dummy_certificate_crt_path }}"
      notify: restart load balancer

    - name: Create chroot directory
      file:
        path: "{{ haproxy_chroot_dir }}"
        mode: 0550
        owner: haproxy
        group: haproxy
        state: directory

    # HAProxy currently does not internally handle OCSP so we must do it manually
    - name: Read certificate file to see if OCSP is enabled
      openssl_certificate_info:
        path: "{{ pki_configs.load_balancers.certificate_crt_path }}"
      register: cert_info

    - name: Set up OCSP files if certificate OCSP extension is present
      when: cert_info.ocsp_uri
      block:
        - name: Install certificate OCSP fetch script
          copy:
            src: haproxy/cert_ocsp.sh
            dest: "{{ haproxy_cert_ocsp_script }}"
            owner: root
            group: root
            mode: 0555

        - name: Install required tools
          package:
            name:
              - socat
              - openssl

        - name: Set up cronjob to periodically fetch certificate OCSP
          cron:
            name: "HAProxy certificate OCSP renew"
            job: "{{ haproxy_cert_ocsp_script }} '{{ pki_configs.load_balancers.certificate_crt_path }}'"
            weekday: "3"
            hour: "1"
            minute: "0"
            user: root
            state: present

        - name: Force a run of the script now to make sure the server has OCSP configured
          command:
            argv: [ "{{ haproxy_cert_ocsp_script}}", "{{ pki_configs.load_balancers.certificate_crt_path }}" ]


- name: Configure haproxy
  become: yes
  block:
    - name: Copy haproxy configuration file
      template:
        src: haproxy/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        mode: 0400
        owner: root
        group: root
      notify: restart load balancer
