##
## This file is managed by ansible. Manual overrides may be overwritten
##

upstream {{ nginx_upstream_name }} {
    ip_hash;

{% for server_name in groups['keycloak'] %}
    server {{ server_name }}:{{ keycloak_https_port }} max_fails={{ nginx_healthcheck_max_fails }} fail_timeout={{ nginx_healthcheck_fail_timeout }};
{% endfor %}
}

server {
    listen {{ load_balancer_https_port }} http2 ssl;
    listen [::]:{{ load_balancer_https_port }} http2 ssl;

    server_name {{ service_hostname_dns }};

    ssl_certificate {{ pki_certificate_crt_path }};
    ssl_certificate_key {{ pki_certificate_key_path }};

    include "{{ nginx_snippets_dir }}/ssl.conf";

    resolver {{ nginx_resolver_ips }} valid={{ nginx_resolver_validity }};
    resolver_timeout {{ nginx_resolver_timeout }};

{% if keycloak_path_prefix != "/" %}
    location = / {
        return 302 https://$host{{ keycloak_path_prefix }}/;
    }
{% endif %}

    location ~ ^{{ keycloak_path_prefix }} {
        include "{{ nginx_snippets_dir }}/proxy.conf";

        location ~ ^{{ keycloak_path_prefix }}/admin {
{% for realm in access_admin_realm_allowed_sources %}
            location ~ ^{{ keycloak_path_prefix }}/admin/realms/{{ realm }} {
{% for source in access_admin_realm_allowed_sources[realm] + access_admin_allowed_sources %}
                allow {{ source }};
{% endfor %}
                deny all;
                error_page 403 =444 /;
                include "{{ nginx_snippets_dir }}/proxy.conf";
            }
{% endfor %}

{% for source in access_admin_allowed_sources %}
            allow {{ source }};
{% endfor %}
            deny all;
            error_page 403 =444 /;
            include "{{ nginx_snippets_dir }}/proxy.conf";
        }

        location ~ ^{{ keycloak_path_prefix }}/health {
{% for source in access_health_allowed_sources %}
            allow {{ source }};
{% endfor %}
            deny all;
            error_page 403 =444 /;
            include "{{ nginx_snippets_dir }}/proxy.conf";
        }

        location ~ ^{{ keycloak_path_prefix }}/metrics {
{% for source in access_metrics_allowed_sources %}
            allow {{ source }};
{% endfor %}
            deny all;
            error_page 403 =444 /;
            include "{{ nginx_snippets_dir }}/proxy.conf";
        }
    }
}

server {
    listen {{ load_balancer_http_port }};
    listen [::]:{{ load_balancer_http_port }};

    server_name {{ service_hostname_dns }};

    return 302 https://$host$request_uri;
}

# vim: ft=nginx expandtab sw=4 ts=4 sts=4
