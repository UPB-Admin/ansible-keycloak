##
## This file is managed by ansible. Manual overrides may be overwritten
##

upstream {{ nginx_upstream_name }} {
    # use IP hashing to load balance access (sticky sessions)
    hash $remote_addr;

{% for server_name in groups['keycloak'] %}
    server {{ server_name }}:{{ keycloak_https_port }} max_fails={{ nginx_healthcheck_max_fails }} fail_timeout={{ nginx_healthcheck_fail_timeout }};
{% endfor %}
}

server {
    listen {{ load_balancer_https_port }} http2 ssl;
    listen [::]:{{ load_balancer_https_port }} http2 ssl;

    server_name {{ service_hostname_dns }};

    ssl_certificate {{ pki_certificate_crt_path }};
    ssl_certificate_key {{ pki_certificate_key_path }};

    include "{{ nginx_snippets_dir }}/ssl.conf";

    resolver {{ nginx_resolver_ips }} valid={{ nginx_resolver_validity }};
    resolver_timeout {{ nginx_resolver_timeout }};

    location / {
        return 302 https://$host/auth/;
    }

    location /auth {
        include "{{ nginx_snippets_dir }}/proxy.conf";
    }

    location /auth/admin {
{% for source in access_admin_allowed_sources %}
        allow {{ source }};
{% endfor %}
        deny all;
        error_page 403 =444 /;

        include "{{ nginx_snippets_dir }}/proxy.conf";
    }

{% for realm in access_admin_realm_allowed_sources %}
    location /auth/admin/realms/{{ realm }} {
{% for source in access_admin_realm_allowed_sources[realm] + access_admin_allowed_sources %}
        allow {{ source }};
{% endfor %}
        deny all;
        error_page 403 =444 /;

        include "{{ nginx_snippets_dir }}/proxy.conf";
    }
{% endfor %}
}

server {
    listen {{ load_balancer_http_port }};
    listen [::]:{{ load_balancer_http_port }};

    server_name {{ service_hostname_dns }};

    return 302 https://$host$request_uri;
}

# vim: ft=nginx expandtab sw=4 ts=4 sts=4
