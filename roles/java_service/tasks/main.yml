- name: Install openjdk {{ java_version }}
  become: yes
  package:
    name:
      - "{{ 'java-%s-openjdk' % java_version }}"
    state: latest
  register: install_out

- name: Update java version and binary alternative
  become: yes
  when: install_out.changed
  block:
    - name: Gather package information
      package_facts:
        manager: auto

    - name: Set openjdk {{ java_version }} package facts
      set_fact:
        java_package: "{{ ansible_facts.packages['java-%s-openjdk' % java_version][0] }}"

    - name: Check possible java binary locations
      stat:
        path: "{{ item }}"
      with_items:
        - "/usr/lib/jvm/java-{{ java_version }}-openjdk-{{ java_package.version }}-{{ java_package.release }}.{{ java_package.arch }}/bin/java"
        - "/usr/lib/jvm/java-{{ java_version }}-openjdk-{{ java_package.version }}-{{ java_package.release }}.{{ java_package.arch }}/jre/bin/java"
      register: java_bin_stat

    - name: Fail if the java binary was not found in any location
      fail:
        msg: "Could not find java binary for version {{ java_version }}"
      when: java_bin_stat.results | selectattr("stat.exists") | length < 1

    - name: Use latest openjdk {{ java_version }} as java alternative
      command:
        argv: [ "update-alternatives", "--set", "java", "{{ item.stat.path }}" ]
      with_items: "{{ java_bin_stat.results | selectattr('stat.exists') }}"
      loop_control:
        label: "{{ item.stat.path }}"
      notify: restart java service
